@page
@model Alexis.Dashboard.Pages.UserMaintenance.UserManagementModel
@{
	ViewData["Title"] = "User Management";
}
@using Kendo.Mvc.UI

@Html.AntiForgeryToken()

<nav class="navbar-title navbar navbar-default" style="background-color: white; margin-bottom: 10px; padding: 15px 50px; box-shadow: 1px 2px 10px -2px rgba(0, 0, 0, 0.2);">
	<div class="container-fluid row align-items-center flex-wrap">
		<div class="col-12 col-lg-auto mb-2">
			<div class="nav-text  mr-2 d-lg-inline text-gray-600 small">
				<label id="LabelTitle">@ViewData["Title"]</label>
			</div>
		</div>
		<!-- NavBar2: Right -->
		<div class="col-12 col-lg col-md d-flex flex-wrap align-items-center justify-content-lg-end justify-content-md-end" style="justify-content:flex-end">
			<!-- Refresh -->
			<button class="btn reportBtn theme_outline_only_btn" type="button" onclick="window.location.reload();"><i class="fa fa-refresh fa-sm"></i> Refresh </></button>
			<!-- Add New -->
			<button class="btn reportBtn theme_gradient_btn" type="button" onclick="onAddClick()"><i class="fa fa-plus"> </i> Add New</button>
		</div>
	</div>
</nav>

<div class="contentRoot navbar navbar-default">
	<!-- Grid -->
	<div id="radGrid_user">
		@(Html.Kendo().Grid(Model.Users)
				.Name("UserGrid")
				.Columns(columns =>
				{
					columns.Template(@<text>
			<div class="text-center">
				# if (Visible) { #
				<span class="button" data-toggle="tooltip" title="Edit" onclick="onEditClick('#= aID #')">
					<img src="~/img/3_User%20Maintenance/icon_edit_grey.png" alt="Edit" />
				</span>
				<img class="line" src="~/img/3_User%20Maintenance/line.png" alt="Line" />
				<span class="button" data-toggle="tooltip" title="Reset" onclick="onResetClick('#= aID #')">
					<img src="~/img/3_User%20Maintenance/icon_reset_password.png" alt="Reset" />
				</span>
				# } #
			</div>
		</text>).Title("Options").Width(100);
					columns.Bound(u => u.uName).Title("User ID");
					columns.Bound(u => u.uFullName).Title("Fullname");
					columns.Bound(u => u.rDesc).Title("User Role");
					columns.Bound(p => p.uStatus).Title("Status")
					.ClientTemplate(
					"<div style='font-size: 0.85em;'>" +
					"<span class='#= uStatus == \"1\" ? \"status_active\" : (uStatus == \"0\" ? \"status_pending\" : \"status_inactive\") #'>" +
					"#= uStatus == 1 ? 'Active' : (uStatus == 0 ? 'Pending' : 'Inactive') #" +
					"</span>" +
					"</div>"
					)
					.Sortable(true);
					columns.Bound(u => u.uCreatedDate).Title("Created Date").Format("{0:MM/dd/yyyy hh:mm:ss tt}");
					columns.Bound(u => u.CreatedByName).Title("Created by");
					columns.Bound(u => u.uUpdatedDate).Title("Updated Date").Format("{0:MM/dd/yyyy hh:mm:ss tt}");
					columns.Bound(u => u.UpdatedByName).Title("Updated By");
					columns.Bound(u => u.uLastLoginDate).Title("Last login Date").Format("{0:MM/dd/yyyy hh:mm:ss tt}");
				})
				.ToolBar(t => t.Search())
				.Pageable(pager => pager.ButtonCount(5).Position(Kendo.Mvc.UI.GridPagerPosition.Top))
				.Scrollable(s => s.Height("calc(80vh - 200px)"))
				.HtmlAttributes(new { style = "margin: 0 15px;" })
				.Sortable()
				.Search(s =>
				{
					s.Field(o => o.uName, "contains");
					s.Field(o => o.uFullName, "contains");
					s.Field(o => o.rDesc, "contains");
				})
				.Events(e => e.DataBound("onGridDataBound"))
				)
	</div>
</div>

@section Scripts {
	<script type="text/javascript">
		
		function onAddClick()
		{
			$.ajax({
					url: "@Url.Page("/UserManagement")?handler=Add",
					method: "GET",
					success: function (data) {
						if(data.message == 'Success'){
							window.location.href = "@Url.Content("~/UserMaintenance/UserAdd")";
						}
						else
						{
							alert(data.message);
						}
					}
				})
		}

		function onEditClick(id) {
			$.ajax({
					url: "@Url.Page("/UserManagement")?handler=Edit",
					method: "POST",
					data: { id: id },
					headers: {RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()},
					success: function (data) {
						if(data.message == 'Success'){
							window.location.href = "@Url.Content("~/UserMaintenance/UserAdd")";
						}
						else
						{
							alert(data.message);
						}
					}
				})
		}

		function onResetClick(id) {
			$.ajax({
				url: "@Url.Page("/UserManagement")?handler=ResetPassword",
				method: "POST",
				data: { id: id },
				headers: {RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()},
				success: function (data) {
					alert(data.message);
				}
			})
		}

	</script>
}