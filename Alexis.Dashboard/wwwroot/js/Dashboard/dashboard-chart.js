function _0x223b() { const _0x2f558a = ['#E9414B', '7901672ibaESb', 'black', 'aliceblue', '#a4c43c', '26034900CvMryc', '60VvgRnG', '2dwUlgi', 'Device\x20Status', 'top', '266015AsAQEa', 'white', 'bar-chart', '#00adef', '876uGAkSU', '7152SeUcEV', '765140Tmehkf', 'Inactive', '8420093TEAMbp', 'center', 'bar', '7OVSWow', 'FontAwesome', '#727CFF', 'getElementById', '470488QKEGPb', '171evMDIc']; _0x223b = function () { return _0x2f558a; }; return _0x223b(); } const _0x19cbf5 = _0x3170; function _0x3170(_0x55dd2f, _0x44bc8a) { const _0x223b76 = _0x223b(); return _0x3170 = function (_0x3170e4, _0x4d6698) { _0x3170e4 = _0x3170e4 - 0x97; let _0x1bf611 = _0x223b76[_0x3170e4]; return _0x1bf611; }, _0x3170(_0x55dd2f, _0x44bc8a); } (function (_0x13f3c2, _0x3ab004) { const _0x79ea23 = _0x3170, _0xdfe66c = _0x13f3c2(); while (!![]) { try { const _0x28bcdc = -parseInt(_0x79ea23(0xa1)) / 0x1 * (parseInt(_0x79ea23(0xaa)) / 0x2) + parseInt(_0x79ea23(0xb1)) / 0x3 * (-parseInt(_0x79ea23(0x97)) / 0x4) + -parseInt(_0x79ea23(0xad)) / 0x5 * (parseInt(_0x79ea23(0xa9)) / 0x6) + -parseInt(_0x79ea23(0x9d)) / 0x7 * (-parseInt(_0x79ea23(0xa4)) / 0x8) + -parseInt(_0x79ea23(0xa2)) / 0x9 * (parseInt(_0x79ea23(0x98)) / 0xa) + parseInt(_0x79ea23(0x9a)) / 0xb + parseInt(_0x79ea23(0xa8)) / 0xc; if (_0x28bcdc === _0x3ab004) break; else _0xdfe66c['push'](_0xdfe66c['shift']()); } catch (_0x2a2228) { _0xdfe66c['push'](_0xdfe66c['shift']()); } } }(_0x223b, 0xe68ef)); const data = { 'labels': ['', '', ''], 'datasets': [{ 'label': 'Active', 'borderColor': _0x19cbf5(0x9f), 'backgroundColor': _0x19cbf5(0x9f), 'barThickness': 0x1e, 'fill': ![], 'data': [iOS_active, android_active, windows_active] }, { 'label': _0x19cbf5(0x99), 'borderColor': _0x19cbf5(0xa3), 'backgroundColor': _0x19cbf5(0xa3), 'barThickness': 0x1e, 'fill': ![], 'data': [iOS_inactive, android_inactive, windows_inactive] }] }, config_barChart = { 'type': _0x19cbf5(0x9c), 'data': data, 'options': { 'indexAxis': 'y', 'responsive': !![], 'maintainAspectRatio': ![], 'plugins': { 'tooltip': { 'titleFont': { 'family': _0x19cbf5(0x9e), 'size': 0x19 }, 'titleColor': _0x19cbf5(0xa6), 'callbacks': { 'labelTextColor': function (_0x4bc4a5) { const _0x41b6ce = _0x19cbf5; return _0x41b6ce(0xa6); } } }, 'datalabels': { 'color': _0x19cbf5(0xae), 'align': _0x19cbf5(0x9b), 'anchor': _0x19cbf5(0x9b) }, 'title': { 'display': !![], 'align': _0x19cbf5(0x9b), 'text': _0x19cbf5(0xab), 'font': { 'size': 0x10, 'family': 'ITC\x20Avant\x20Garde\x20Gothic\x20Std\x20Demi' } }, 'legend': { 'display': !![], 'align': _0x19cbf5(0x9b), 'position': _0x19cbf5(0xac), 'labels': { 'padding': 0xa, 'boxWidth': 0xf, 'font': { 'size': 0xc, 'family': 'ITC\x20Avant\x20Garde\x20Gothic\x20Std\x20Book' } }, 'onClick': function (_0x487b1c, _0x542aa8, _0x5bf9) { } } }, 'scales': { 'x': { 'stacked': !![] }, 'y': { 'stacked': !![], 'ticks': { 'color': [_0x19cbf5(0xa5), _0x19cbf5(0xa7), _0x19cbf5(0xb0)], 'font': { 'family': 'FontAwesome', 'size': 0x19 } } } } }, 'plugins': [ChartDataLabels] }; var canvas_barChart = document[_0x19cbf5(0xa0)](_0x19cbf5(0xaf)), myBarChart = new Chart(canvas_barChart, config_barChart);