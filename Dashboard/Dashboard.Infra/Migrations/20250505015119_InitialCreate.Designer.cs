// <auto-generated />
using System;
using Dashboard.Infra.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dashboard.Infra.Migrations
{
    [DbContext(typeof(VSeriesContext))]
    [Migration("20250505015119_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dashboard.Infra.EF.Models.ANDROIDMDM_APPLICATION", b =>
                {
                    b.Property<string>("APPID")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("APPLICATION_NAME")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("CREATED_BY")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CREATED_ON")
                        .HasPrecision(0)
                        .HasColumnType("datetime2");

                    b.Property<string>("FPATH")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<decimal?>("STATUS")
                        .HasPrecision(1)
                        .HasColumnType("numeric");

                    b.Property<string>("UPDATED_BY")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UPDATED_ON")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VER")
                        .HasPrecision(18, 3)
                        .HasColumnType("numeric");

                    b.HasKey("APPID");

                    b.ToTable("ANDROIDMDM_APPLICATION");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Ad.MACHINE_ADVERTISEMENT", b =>
                {
                    b.Property<Guid>("AID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AABSOLUTEPATH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AAPPROVEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("AAPPROVEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("ACREATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ACREATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("ADECLINEBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ADECLINEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("ADESC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("ADURATION")
                        .HasColumnType("float");

                    b.Property<string>("AEXTENSIONTYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AISBACKGROUNDIMG")
                        .HasColumnType("bit");

                    b.Property<string>("ANAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ARELATIVEPATHURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AREMARKS")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("ASTATUS")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ATOTAL")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<string>("AUPDATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("AUPDATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.HasKey("AID");

                    b.ToTable("MACHINE_ADVERTISEMENT");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MACHINE", b =>
                {
                    b.Property<string>("MID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IPADDRESS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LASTUPDATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MACTIVATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("MADDRESS")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MAPPROVEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("MAPPROVEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("MARKERSHAPE")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("MCREATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("MCREATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("MDECLINEBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("MDECLINEDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("MDESC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MGROUPID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("MKIOSKID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MLATITUDE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MLONGITUDE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MONITORINGSTATUS")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<double?>("MPILOT")
                        .HasColumnType("float");

                    b.Property<string>("MREMARKS")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MSERIAL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MSTATIONID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("MSTATUS")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<string>("PORTNUMBER")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SESSIONKEY")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SKMESSAGE")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SKPIN")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VTMVERSION")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MID");

                    b.ToTable("MACHINE");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Certificates", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsIdentityCert")
                        .HasColumnType("bit");

                    b.Property<string>("UDID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MDM_Certificates");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Commands", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MDM_Commands");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_HttpProxy", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowByPassingProxy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProxyServer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProxyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Profile_ID");

                    b.ToTable("MDM_HttpProxy");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_InstalledApplicationList", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("BundleSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DynamicSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UDID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MDM_InstalledApplicationList");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_InstalledApps", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UDID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MDM_InstalledApps");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_OS_Updates", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HumanReadableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RestartRequired")
                        .HasColumnType("bit");

                    b.Property<string>("UDID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MDM_OS_Updates");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Pending_OS_Updates", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RequestTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UpdateInstalled")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("MDM_Pending_OS_Updates");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlistContent")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("Profile_APNS_Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile_Enroll_Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Profile_GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Profile_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Profile_Status")
                        .HasColumnType("int");

                    b.HasKey("Profile_ID");

                    b.ToTable("MDM_Profile");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_Cellular", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfiguredAPNType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataAPN_AuthenticationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataAPN_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataAPN_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataAPN_ProxyServer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataAPN_UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultAPN_AuthenticationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultAPN_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultAPN_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultAPN_UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Profile_ID");

                    b.ToTable("MDM_Profile_Cellular");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_CertFile", b =>
                {
                    b.Property<Guid>("IpadProfile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CertVersion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IpadProfile_ID");

                    b.ToTable("MDM_Profile_CertFile");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_General", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorizationPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AutomaticallyRemoveProfile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("AutomaticallyRemoveProfile_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("AutomaticallyRemoveProfile_Days")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AutomaticallyRemoveProfile_Hours")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("Branch_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConsentMessage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("LastUpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Profile_APNS_Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile_Enroll_Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Security")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("pStatus")
                        .HasColumnType("int");

                    b.HasKey("Profile_ID");

                    b.ToTable("MDM_Profile_General");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_General_BranchID", b =>
                {
                    b.Property<Guid>("IID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Branch_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Profile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("cProfile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IID");

                    b.ToTable("MDM_Profile_General_BranchID");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_Passcode", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowSimpleValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaximumAutoLock")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaximumGracePeriod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaximumNumberOfFailedAttempts")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaximumPasscodeAge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MinimumNumberOfComplexCharacters")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MinimumPasscodeLength")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasscodeHistory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Requirealphanumericvalue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Profile_ID");

                    b.ToTable("MDM_Profile_Passcode");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_Restriction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<Guid>("Profile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Queue")
                        .HasColumnType("int");

                    b.Property<Guid>("RID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RestrictionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("MDM_Profile_Restriction");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_Restriction_Advance", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcceptCookies")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("App_Identify")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestrictAppUsage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Profile_ID");

                    b.ToTable("MDM_Profile_Restriction_Advance");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_ServicesURL", b =>
                {
                    b.Property<Guid>("Profile_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("GroupID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("CertPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckInURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOutURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnrollmentURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Profile_ID", "GroupID");

                    b.ToTable("MDM_Profile_ServicesURL");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_VPN", b =>
                {
                    b.Property<Guid>("Profile_VPN_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConnectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConnectionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Account_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_AllowTrafficFromAllCaptiveNetworkingAppsOustsideVPNTunnel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_AllowTrafficFromCaptiveWebSheetOutsideTheVPNTunnel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_AllowUserToDisableAutomaticConnection")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_AlwaysOnVPN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CaptiveNetworkingAppBundleIdentifiers")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IKEV2_CellularAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularAccount_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularDeadPeerDetectionRate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularDisableMobilityAndMultihoming")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularDisableRedirects")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularEAP_Authentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularEnableCertificateRevocationCheck")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularEnableEAP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularEnableNATKeepaliveWhileTheDeviceIsAsleep")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularEnablePerfectDForwordSecrecy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularLocalIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularMachineAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularNATKeepAliveInternal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularRemoteIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularServer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularSharedSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_CellularUseIPv4IPv6InternalSubnetAttributes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Child_DiffleHellmanGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Child_EncryptionAlgorithm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Child_IntegrityAlgorithm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Child_LifetimeInMinutes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_DeadPeerDetectionRate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_DisableMobilityAndMultihoming")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_DisableRedirects")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_DisconnectOnIdle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_DisconnectOnIdle_Minutes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_DisconnectOnIdle_Seconds")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_EAP_Authentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_EnableCertificateRevocationCheck")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_EnableEAP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_EnableNATKeepaliveWhileTheDeviceIsAsleep")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_EnablePerfectDForwordSecrecy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_IKESA_DiffieHellmanGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_IKESA_EncryptionAlgorithm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_IKESA_IntegrityAlgorithm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_IKESA_LifeTimeInMinutes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_LocalIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_MachineAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_NATKeepAliveInternal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ProxySetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ProxySetup_Authentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ProxySetup_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ProxySetup_Port")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ProxySetup_ProxyServerUrl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ProxySetup_Server")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_RemoteIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_SendAllTrafficThroughVPN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_Server")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ServiceExceptions_AirPrint")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_ServiceExceptions_VoiceMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_SharedSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_UseIPv4IPv6InternalSubnetAttributes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_UserSameTunnelConfigurationForCellularAndWifi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiAccount_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiDeadPeerDetectionRate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiDisableMobilityAndMultihoming")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiDisableRedirects")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiEAP_Authentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiEnableCertificateRevocationCheck")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiEnableEAP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiEnableNATKeepaliveWhileTheDeviceIsAsleep")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiEnablePerfectDForwordSecrecy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiLocalIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiMachineAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiNATKeepAliveInternal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiRemoteIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiServer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiSharedSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IKEV2_WifiUseIPv4IPv6InternalSubnetAttributes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Account_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Authentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Authentication_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_MachineAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_PromptForPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_ProxyServerURL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_ProxySetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Proxy_Port")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Proxy_Server")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_Server")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_SharedSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPSEC_UseHybridAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_MachineAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_PromptForPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_ProxySetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_ProxySetupURL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_ProxySetup_Authentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_ProxySetup_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_ProxySetup_Port")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_ProxySetup_Server")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_SendAllTrafficeThroughVPN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_Server")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_SharedSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_UseHybridAuthentication")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_UserAuthentication_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("L2TP_UserAuthentication_RSASecurID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Profile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Profile_VPN_ID");

                    b.ToTable("MDM_Profile_VPN");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Profile_WIFI", b =>
                {
                    b.Property<Guid>("Profile_WIFI_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("App_Identifity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AutoJoin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisableCaptiveNetworkDetection")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnableQosMarking")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FastLaneQosMarking")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HiddenNetwork")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NetworkType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Profile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProxyPACFallbackAllowed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProxySetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityTypePassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerIPAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerPort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerProxyURL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceSetIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhitelistAppleAudioVideoCalling")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Profile_WIFI_ID");

                    b.ToTable("MDM_Profile_WIFI");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MDM_Restriction_Menu", b =>
                {
                    b.Property<Guid>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<int?>("GroupHeader")
                        .HasColumnType("int");

                    b.Property<int?>("NumberType")
                        .HasColumnType("int");

                    b.Property<int?>("Partition")
                        .HasColumnType("int");

                    b.Property<int?>("Queue")
                        .HasColumnType("int");

                    b.Property<int?>("RGroup")
                        .HasColumnType("int");

                    b.Property<string>("RestrictionDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RestrictionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RID");

                    b.ToTable("MDM_Restriction_Menu");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.MENU", b =>
                {
                    b.Property<string>("MID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("MDESC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MGROUP")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<string>("MPATH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MSEQ")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MTYPE")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TEST")
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("MID");

                    b.ToTable("MENU");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Reporting.TblMonitoringDevice", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Downtime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Downtime_Seconds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastCaptured")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUptime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TblMachineMachineSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Uptime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Uptime_Seconds")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("TblMachineMachineSerial");

                    b.ToTable("TblMonitoringDevices");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Reporting.tbl_app_mob_translog", b =>
                {
                    b.Property<Guid>("TransID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("NRIC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PinIssuance")
                        .HasColumnType("bit");

                    b.Property<string>("StaffID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TblMachineMachineSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TransID");

                    b.HasIndex("TblMachineMachineSerial");

                    b.ToTable("tbl_app_mob_translog");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Reporting.tbl_app_msf_translog", b =>
                {
                    b.Property<Guid>("TransID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("NRIC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PinIssuance")
                        .HasColumnType("bit");

                    b.Property<string>("StaffID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TblMachineMachineSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TransID");

                    b.HasIndex("TblMachineMachineSerial");

                    b.ToTable("tbl_app_msf_translog");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.TBLAGENTVIDEO", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("JsonSetting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TBLAGENTVIDEO");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.TRANSACTION_LOG", b =>
                {
                    b.Property<string>("TRANSID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CUSTID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CUSTTYPE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MKIOSKID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MSERIAL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("REMARKS")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SESSIONID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TDESC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TRANSDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TSTATUS")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<string>("TTYPE")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("USERID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("TRANSID");

                    b.ToTable("TRANSACTION_LOG");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.UserRoleBranch.LOCALUSER", b =>
                {
                    b.Property<string>("LOGINID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("LEMAIL")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LPASSWORD")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LRESETPASSWORD")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("LRESETPASSWORDDATETIME")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.HasKey("LOGINID");

                    b.ToTable("LOCALUSER");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.UserRoleBranch.USER_LOGIN", b =>
                {
                    b.Property<string>("AID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal?>("AGENTFLAG")
                        .HasPrecision(1)
                        .HasColumnType("numeric");

                    b.Property<double?>("LOCALUSER")
                        .HasColumnType("float");

                    b.Property<double?>("LOGINFLAG")
                        .HasColumnType("float");

                    b.Property<double?>("MCARDREPLENISHMENT")
                        .HasColumnType("float");

                    b.Property<double?>("MCHEQUEREPLENISHMENT")
                        .HasColumnType("float");

                    b.Property<double?>("MCONSUMABLE")
                        .HasColumnType("float");

                    b.Property<double?>("MSECURITY")
                        .HasColumnType("float");

                    b.Property<double?>("MTROUBLESHOOT")
                        .HasColumnType("float");

                    b.Property<string>("RID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SESSIONKEY")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UAPPROVEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UAPPROVEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("UCMID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UCREATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UCREATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("UDECLINEBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UDECLINEDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("UFULLNAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ULASTLOGINDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("UNAME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UREMARKS")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("USESSIONID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("USTATUS")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<string>("UUPDATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UUPDATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.HasKey("AID");

                    b.ToTable("USER_LOGIN");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.UserRoleBranch.USER_ROLES", b =>
                {
                    b.Property<string>("RID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("RAPPROVEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("RAPPROVEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("RCREATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("RCREATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("RDECLINEBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("RDECLINEDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.Property<string>("RDESC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RREMARKS")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("RSTATUS")
                        .HasPrecision(10)
                        .HasColumnType("numeric");

                    b.Property<string>("RUPDATEDBY")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("RUPDATEDDATE")
                        .HasPrecision(6)
                        .HasColumnType("datetime2");

                    b.HasKey("RID");

                    b.ToTable("USER_ROLES");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.UserRoleBranch.User_Branch", b =>
                {
                    b.Property<Guid>("bID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FTPUsername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FTPpassword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FTPpath")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid?>("bApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("bApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("bBimbBranchCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("bBimbBranchRCSFolderName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("bBimbControlUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("bBimbTellerID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeSpan?>("bCloseTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("bCreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("bCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("bDeclinedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("bDeclinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("bDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("bFriday")
                        .HasColumnType("bit");

                    b.Property<bool?>("bMonday")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("bOpenTime")
                        .HasColumnType("time");

                    b.Property<string>("bRemarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("bSaturday")
                        .HasColumnType("bit");

                    b.Property<int?>("bStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("bSunday")
                        .HasColumnType("bit");

                    b.Property<bool?>("bThursday")
                        .HasColumnType("bit");

                    b.Property<bool?>("bTuesday")
                        .HasColumnType("bit");

                    b.Property<Guid?>("bUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("bUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("bWednesday")
                        .HasColumnType("bit");

                    b.HasKey("bID");

                    b.ToTable("User_Branch");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.iOS.tblMachine", b =>
                {
                    b.Property<string>("MachineSerial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApnPushDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApnRecDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppDeviceToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableDevice_Capacity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BluetoothMAC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuildVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ComponentAlertTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ComponentBattLevel")
                        .HasColumnType("int");

                    b.Property<bool?>("ComponentCardReaderStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ComponentLastAlertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ComponentThumbStatus")
                        .HasColumnType("bit");

                    b.Property<string>("DeviceCapacity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EraseDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmwareBatteryLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirmwareBatteryStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FirmwareExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmwareSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirmwareVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsRoaming")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSupervised")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastInitializeTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LostLatitude")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LostLongitude")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("LostModeEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("MachineDataSignal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MachineImei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MachineStatus")
                        .HasColumnType("int");

                    b.Property<string>("MachineUDID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("MonitorPushDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MonitorRecDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MsfAppID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OSVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PasscodeCompliant")
                        .HasColumnType("bit");

                    b.Property<bool?>("PasscodeCompliantWithProfiles")
                        .HasColumnType("bit");

                    b.Property<bool?>("PasscodePresent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ResolvedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SingleAppModeEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserBranchbID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BranchId");

                    b.Property<string>("WifiMAC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("appStatus")
                        .HasColumnType("int");

                    b.Property<int?>("componentStatus")
                        .HasColumnType("int");

                    b.Property<string>("iPadBattLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("iPadStatus")
                        .HasColumnType("int");

                    b.HasKey("MachineSerial");

                    b.HasIndex("UserBranchbID");

                    b.ToTable("tblMachine");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Reporting.TblMonitoringDevice", b =>
                {
                    b.HasOne("Dashboard.Infra.EF.Models.iOS.tblMachine", "tblMachine")
                        .WithMany("TblMonitoringDevices")
                        .HasForeignKey("TblMachineMachineSerial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblMachine");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Reporting.tbl_app_mob_translog", b =>
                {
                    b.HasOne("Dashboard.Infra.EF.Models.iOS.tblMachine", "tblMachine")
                        .WithMany("TblMOBTransLogs")
                        .HasForeignKey("TblMachineMachineSerial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblMachine");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.Reporting.tbl_app_msf_translog", b =>
                {
                    b.HasOne("Dashboard.Infra.EF.Models.iOS.tblMachine", "tblMachine")
                        .WithMany("TblMSFTransLogs")
                        .HasForeignKey("TblMachineMachineSerial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblMachine");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.iOS.tblMachine", b =>
                {
                    b.HasOne("Dashboard.Infra.EF.Models.UserRoleBranch.User_Branch", "UserBranch")
                        .WithMany("TblMachines")
                        .HasForeignKey("UserBranchbID");

                    b.Navigation("UserBranch");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.UserRoleBranch.User_Branch", b =>
                {
                    b.Navigation("TblMachines");
                });

            modelBuilder.Entity("Dashboard.Infra.EF.Models.iOS.tblMachine", b =>
                {
                    b.Navigation("TblMOBTransLogs");

                    b.Navigation("TblMSFTransLogs");

                    b.Navigation("TblMonitoringDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
